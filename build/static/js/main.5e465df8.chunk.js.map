{"version":3,"sources":["Loading.js","Tours.js","Tour.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","Tours","tours","removeTour","className","map","tour","id","Tour","image","info","name","price","useState","readMore","setReadMore","src","alt","substring","onClick","App","loading","setLoading","setTours","fetchTours","a","fetch","response","json","console","log","useEffect","length","newTours","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAMeA,EAJC,WACd,OAAO,mD,OCgBMC,EAfD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACtB,OACE,oCACE,qBAAKC,UAAU,QAAf,SACE,mDAEF,qBAAKA,UAAU,YAAf,SACGF,EAAMG,KAAI,SAACC,GACV,OAAO,cAAC,EAAD,2BAAwBA,GAAxB,IAA8BH,WAAYA,IAA/BG,EAAKC,aCgBlBC,EAxBF,SAAC,GAAkD,IAAhDD,EAA+C,EAA/CA,GAAIE,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,KAAaC,GAAuB,EAA9BC,MAA8B,EAAvBD,MAAMR,EAAiB,EAAjBA,WAC5C,EAAgCU,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,OACE,0BAASX,UAAU,cAAnB,UACE,qBAAKA,UAAU,MAAMY,IAAKP,EAAOQ,IAAKN,IACtC,yBAAQP,UAAU,SAAlB,UACE,qBAAKA,UAAU,aAAf,SACE,6BAAKO,MAEP,oBAAGP,UAAU,YAAb,UACGU,EAAWJ,EAAH,UAAaA,EAAKQ,UAAU,EAAG,KAA/B,OAET,wBAAQd,UAAU,YAAYe,QAAS,kBAAMJ,GAAaD,IAA1D,SACGA,EAAW,YAAc,kBAG9B,wBAAQV,UAAU,SAASe,QAAS,kBAAMhB,EAAWI,IAArD,gCC2COa,MAtDf,WACE,MAA8BP,oBAAS,GAAvC,mBAAOQ,EAAP,KAAgBC,EAAhB,KACA,EAA0BT,mBAAS,IAAnC,mBAAOX,EAAP,KAAcqB,EAAd,KAOMC,EAAU,uCAAG,8BAAAC,EAAA,6DACjBH,GAAW,GADM,kBAIQI,MAfjB,8CAWS,cAITC,EAJS,gBAKKA,EAASC,OALd,OAKT1B,EALS,OAMfoB,GAAW,GACXC,EAASrB,GAPM,kDASfoB,GAAW,GACXO,QAAQC,IAAR,MAVe,0DAAH,qDAkBhB,OAJAC,qBAAU,WACRP,MACC,IAECH,EAEA,+BACE,cAAC,EAAD,MAKe,IAAjBnB,EAAM8B,OAEN,iCACE,qBAAK5B,UAAU,QAAf,SACE,2CAEF,wBAAQA,UAAU,SAASe,QAASK,EAApC,4BAOJ,+BACE,cAAC,EAAD,CAAOtB,MAAOA,EAAOC,WA7CN,SAACI,GAClB,IAAM0B,EAAW/B,EAAMgC,QAAO,SAAC5B,GAAD,OAAUA,EAAKC,KAAOA,KACpDgB,EAASU,SCHEE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5e465df8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return <h1>Tours Loading...</h1>;\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport Tour from \"./Tour\";\r\nimport \"./index.css\";\r\n\r\nconst Tours = ({ tours, removeTour }) => {\r\n  return (\r\n    <section>\r\n      <div className=\"title\">\r\n        <h2>City Tours List</h2>\r\n      </div>\r\n      <div className=\"tour-list\">\r\n        {tours.map((tour) => {\r\n          return <Tour key={tour.id} {...tour} removeTour={removeTour}></Tour>;\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Tours;\r\n","import React, { useState } from \"react\";\r\nimport Tours from \"./Tours\";\r\nimport \"./index.css\";\r\n\r\nconst Tour = ({ id, image, info, price, name, removeTour }) => {\r\n  const [readMore, setReadMore] = useState(false);\r\n  return (\r\n    <article className=\"single-tour\">\r\n      <img className=\"img\" src={image} alt={name} />\r\n      <footer className=\"footer\">\r\n        <div className=\"info-title\">\r\n          <h4>{name}</h4>\r\n        </div>\r\n        <p className=\"info-body\">\r\n          {readMore ? info : `${info.substring(0, 300)}...`}\r\n\r\n          <button className=\"read-more\" onClick={() => setReadMore(!readMore)}>\r\n            {readMore ? \"show less\" : \" read more\"}\r\n          </button>\r\n        </p>\r\n        <button className=\"delete\" onClick={() => removeTour(id)}>\r\n          Remove Tour\r\n        </button>\r\n      </footer>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Tour;\r\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport \"./index.css\";\nimport Loading from \"./Loading\";\nimport Tour from \"./Tour\";\nimport Tours from \"./Tours\";\n\nconst url = \"https://course-api.com/react-tours-project\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [tours, setTours] = useState([]);\n\n  const removeTour = (id) => {\n    const newTours = tours.filter((tour) => tour.id !== id);\n    setTours(newTours);\n  };\n\n  const fetchTours = async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(url);\n      const tours = await response.json();\n      setLoading(false);\n      setTours(tours);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTours();\n  }, []);\n\n  if (loading) {\n    return (\n      <main>\n        <Loading />\n      </main>\n    );\n  }\n\n  if (tours.length === 0) {\n    return (\n      <main>\n        <div className=\"title\">\n          <h1>0 Tours</h1>\n        </div>\n        <button className=\"delete\" onClick={fetchTours}>\n          check tours\n        </button>\n      </main>\n    );\n  }\n  return (\n    <main>\n      <Tours tours={tours} removeTour={removeTour} />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}